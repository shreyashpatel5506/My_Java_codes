34. Find First and Last Position of Element in Sorted Array
Solved
Medium
Topics
premium lock icon
Companies
Given an array of integers nums sorted in non-decreasing order, find the starting and ending position of a given target value.

If target is not found in the array, return [-1, -1].

You must write an algorithm with O(log n) runtime complexity.

 

Example 1:

Input: nums = [5,7,7,8,8,10], target = 8
Output: [3,4]
Example 2:

Input: nums = [5,7,7,8,8,10], target = 6
Output: [-1,-1]
Example 3:

Input: nums = [], target = 0
Output: [-1,-1]
 

Constraints:

0 <= nums.length <= 105
-109 <= nums[i] <= 109
nums is a non-decreasing array.
-109 <= target <= 109


solution:-----


class Solution {
    public static int findindex(int[]  nums,int target,boolean startIndex){
        int ans=-1;
        int start=0;
        int end = nums.length-1;
        while ( start <= end){
            int mid = start + ((end - start)/2);
            if(target < nums[mid]){
                end = mid -1;
            }else if(target > nums[mid]){
                start = mid +1;
            }
            else{
                if(startIndex){
                    end = mid -1;
                }else{
                    start = mid+1;
                }
                ans = mid;
               
            }
            }
            return ans;
        }
    
    public int[] searchRange(int[] nums, int target) {
        int[] ans=new int[2];
        int start = findindex(nums,target,true);
        int end = findindex(nums,target,false);
        ans[0] = start;
        ans[1] = end;
        return ans;

    }
}